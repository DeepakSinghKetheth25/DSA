//Time Complexity -> O(n)
//Space Comlpexity -> O(1)
//Approach : Using Sliding Window. 
            1. Starting from 1st index find the subarray whose sum is greater than x.
            2. After that, in that subarray, add a new element & remove the first element, till sum of subarray is greater than x. 
               & keep track of minimum no. of such elements whose sum is greater than x.    

class Solution{
  public:

    int sb(int arr[], int n, int x)
    {
        
        int curr_sum = 0, start = 0,end = 0, min_length = n+1;
        
        while(end<n){
            
            while(curr_sum <= x && end<n){
                curr_sum+=arr[end++];
            }
            
            while(curr_sum > x && start<n){
            
                if(min_length > (end-start))
                    min_length = end-start;
                    
                curr_sum-=arr[start++];
            }
        }
         return min_length;
    }
};
