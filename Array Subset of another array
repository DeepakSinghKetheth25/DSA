Time Complexity -> O(n)
Space Complexity -> O(n)

//This solution will create an error is duplicates are there
//It will print yes if a1[1,2,3,4] & a2[1,2,3,3]

// string isSubset(int a1[], int a2[], int n, int m) {
    
//     set<int> s;
    
//     for(int i=0;i<n;i++){
//         s.insert(a1[i]);
//     }
//     int count = 0;
//     for(int i=0;i<m;i++){
        
//         if(s.find(a2[i])!=s.end())
//             count++;
//     }
//     if(count==m)
//         return "Yes";
//     else
//         return "No";
// }


//Therefore use map & store frequencies.
//For every element of a2 found in map, decrease its frequency.
string isSubset(int arr1[], int arr2[], int n, int m) {

map<int, int> frequency;
     
    for (int i = 0; i < n; i++)
    {
        frequency[arr1[i]]++;
    }

    for (int i = 0; i < m; i++)
    {
        if (frequency[arr2[i]] > 0)
            frequency[arr2[i]]--;
        else
        {
            return "No";
        }
    }
    return "Yes";

}
